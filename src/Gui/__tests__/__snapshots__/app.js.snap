// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App renders correctly 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="funkly-container"
      >
        <h1
          class="funkly-title"
        >
          FUNKLY
        </h1>
        <div
          class="funkly-buttons"
        >
          <button>
            <img
              class="funkly-button-icon"
              src="playbutton.png"
            />
             
          </button>
          <button>
            <img
              class="funkly-button-icon"
              src="debugon.png"
            />
          </button>
          <button>
            <img
              class="funkly-button-icon"
              src="savebutton.png"
            />
          </button>
          <button>
            <img
              class="funkly-button-icon"
              src="loadbutton.png"
            />
          </button>
          <button>
            <img
              class="funkly-button-icon"
              src="xmlbutton.png"
            />
          </button>
          <input
            id="importedCode"
            name="importedCode"
            type="file"
          />
          <label
            class="funkly-file-load"
            for="importedCode"
          >
            <img
              class="funkly-button-icon"
              src="choosefile.png"
            />
          </label>
        </div>
        <div
          class="funkly-blockly-editor"
        />
        <div
          class="funkly-engine"
        >
          <div>
            Hiiren sijainti: 
            0
            , 
            0
          </div>
        </div>
        <div
          class="funkly-char-selection"
        />
        <div
          class="funkly-debug"
        >
          <div />
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="funkly-container"
    >
      <h1
        class="funkly-title"
      >
        FUNKLY
      </h1>
      <div
        class="funkly-buttons"
      >
        <button>
          <img
            class="funkly-button-icon"
            src="playbutton.png"
          />
           
        </button>
        <button>
          <img
            class="funkly-button-icon"
            src="debugon.png"
          />
        </button>
        <button>
          <img
            class="funkly-button-icon"
            src="savebutton.png"
          />
        </button>
        <button>
          <img
            class="funkly-button-icon"
            src="loadbutton.png"
          />
        </button>
        <button>
          <img
            class="funkly-button-icon"
            src="xmlbutton.png"
          />
        </button>
        <input
          id="importedCode"
          name="importedCode"
          type="file"
        />
        <label
          class="funkly-file-load"
          for="importedCode"
        >
          <img
            class="funkly-button-icon"
            src="choosefile.png"
          />
        </label>
      </div>
      <div
        class="funkly-blockly-editor"
      />
      <div
        class="funkly-engine"
      >
        <div>
          Hiiren sijainti: 
          0
          , 
          0
        </div>
      </div>
      <div
        class="funkly-char-selection"
      />
      <div
        class="funkly-debug"
      >
        <div />
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
